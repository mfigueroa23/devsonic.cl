name: Package DevSonic

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Obteniendo el código fuente
        uses: actions/checkout@v2

      - name: Instalando Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Instalando dependencias del proyecto
        run: npm install

      - name: Compilando el proyecto
        run: npm run build

      - name: Guardando carpeta dist como artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist

  dockerhub:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Obteniendo el código fuente
        uses: actions/checkout@v2

      - name: Descargando artifact dist
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Extrayendo la versión de package.json
        id: version
        run: echo "VERSION=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV

      - name: Haciendo login en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Instalando Docker Buildx
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -sSL https://github.com/docker/buildx/releases/download/v0.8.0/buildx-v0.8.0.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
          chmod +x ~/.docker/cli-plugins/docker-buildx

      - name: Configurando Docker Buildx
        run: docker buildx create --use

      - name: Construyendo y subiendo imagen multi-plataforma a Docker Hub
        run: |
          docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/devsonic_cl:${{ env.VERSION }} --push .
